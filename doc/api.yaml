
openapi: 3.0.0
info: 
  title: WASA Photo
  description:  |
    APIs designed for a social focused on photos
  version: 1.0.0

tags:
  - name: Login
  - name: Home
    description: About homepage
  - name: User
    description: About users
  - name: Following
    description: about following
  - name: Ban
    description: About bans
  - name: Photo
    description: About photos
  - name: Comment
    description: About comments
  - name: Like
    description: About likes

paths:

  /session:
    
    post:
      tags:
        - Login
      summary: Logs in the user
      description:  |
        If the user does not exist, it will be created, and 
        an identifier is returned.
        If the user exists, the identifier is returned.
      operationId: doLogin
      requestBody:
        description: user details
        content:
          application/json:
            schema: 
              description: Example of a username
              type: object
              properties:
                name:
                  description: Username
                  type: string
                  example: Maria
                  pattern: '^.*?$'
                  minLength: 3
                  maxLength: 16
        required: true
      responses:
        '201':
          description: User log-in action succesful
          content:
            application/json: 
              schema:
                $ref: "#/components/schemas/UserIdentifier"
  
  /home/:
  
    get:
      tags:  
        - Home
      summary: Get stream of following
      description: Get stream of photos of following
      security:
        - bearerAuth: []
      operationId: getFollowingStream
      responses:
        '200':
          description: Stream page returned successfully
          content:
            application/json:
              schema:
                description: Array of photos
                type: array
                minItems: 0
                maxItems: 40
                items:
                  $ref: '#/components/schemas/Photo'
        '500':
          description: The server encountered an internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  
  /users/myStream/:
    get:
      tags:  
        - User
      summary: Get my stream
      description: Get my stream of all photos
      security:
        - bearerAuth: []
      operationId: getMyStream
      responses:
        '200':
          description: Profile page returned successfully
          content:
            application/json:
              schema:
                description: Array of photos
                type: array
                minItems: 0
                maxItems: 40
                items:
                  $ref: '#/components/schemas/Photo'
        '500':
          description: The server encountered an internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      
  
  /users/{userId}/:
    
    get:
      tags:  
        - User
      summary: Get user stream
      description: Get stream of all photos of a specific user
      operationId: getUserStream
      parameters:
        - name: userId
          in: path
          description: Username of user
          required: true
          schema:
            $ref: '#/components/schemas/UserIdentifier'
      responses:
        '200':
          description: Profile page returned successfully
          content:
            application/json:
              schema:
                description: Array of photos
                type: array
                minItems: 0
                maxItems: 40
                items:
                  $ref: '#/components/schemas/Photo'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: The server encountered an internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'

  /users/{userId}/changeUsername:
    
    put:
      tags:
        - User
      summary: Change username
      description:  Change username of user of current session
      security:
        - bearerAuth: []
      operationId: setMyUsername
      parameters:
        - name: userId
          in: path
          description: Username of current user
          required: true
          schema:
            $ref: '#/components/schemas/UserIdentifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Username"
      responses:
        '200':
          description: Username changed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: The server encountered an internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'

  /users/{userId}/uploadPhoto:
    post:
      tags:
        - User
      summary: Upload photo
      description: Upload a photo for the current user
      security:
        - bearerAuth: []
      operationId: uploadPhoto
      parameters:
        - name: userId
          in: path
          description: Username of current user
          required: true
          schema:
            $ref: '#/components/schemas/UserIdentifier'
      requestBody:
        content:
          image/png:
            schema:
              type: string
              description: String for png representation
              minLength: 1
              maxLength: 500
              format: binary
          image/jpg:
            schema:
              type: string
              description: String for jpg representation
              minLength: 1
              maxLength: 500
              format: binary
          image/jpeg:
            schema:
              type: string
              description: String for jpeg representation
              minLength: 1
              maxLength: 500
              format: binary
      responses:
        '201':
          description: Photo uploaded successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Photo"
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: The server encountered an internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  
  /photos/{photoId}:
    
    parameters:
      - name: photoId
        in: path
        description: Identifier of photo showed
        required: true
        schema:
          $ref: "#/components/schemas/Identifier"
    
    get:
      tags:
        - Photo
      summary: Show photo
      description: Show a specific photo
      security:
        - bearerAuth: []
      operationId: showPhoto
      
      responses:
        '200':
          description: Photo opened successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Photo'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: The server encountered an internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'

    delete:
      tags:
        - Photo
      summary: Delete a photo
      description: Delete a specific photo of the current user
      security:
        - bearerAuth: []
      operationId: deletePhoto

      responses:
        '204': 
          description: Photo deleted successfully
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: The server encountered an internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'

  /users/findUser:

    get:
      tags:
        - User
      summary: Find an user
      description: Find an user specifing the username
      operationId: getUserProfile
      parameters:
        - name: username
          in: query
          description: Username of user we are looking for
          required: true
          schema:
            $ref: '#/components/schemas/Username'
      responses:
        '200':
          description: User found successfully
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: The server encountered an internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'

  /photos/{photoId}/comments/:

    parameters:
      - name: photoId
        in: path
        description: Identifier of the photo 
        required: true
        schema: 
          $ref: '#/components/schemas/Identifier'

    get:
      tags:
        - Comment
      summary: List comments
      description: List all comments of a photo
      operationId: listComments
      responses: 
        '200':
          description: Comments listed successfully
          content:
            application/json:
              schema:
                description: List of comments
                type: array
                minItems: 0
                maxItems: 50
                items:
                  $ref: '#/components/schemas/Comment'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: The server encountered an internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      
    post:
      tags:
        - Comment
      summary: Leave a comment
      description: Leave a comment for a specific photo
      security:
        - bearerAuth: []
      operationId: commentPhoto
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
      responses:
        '201':
          description: Photo commented successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: The server encountered an internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'

  /photos/{photoId}/comments/{commentId}:

    parameters: 
      - name: photoId
        in: path
        description: Identifier of photo
        required: true
        schema:
          $ref: '#/components/schemas/Identifier'
      - name: commentId
        in: path
        description: Identifier of comment to modify
        required: true
        schema: 
          $ref: '#/components/schemas/Identifier'

    get:
      tags:
        - Comment
      summary: Get specific comment
      description: Return a specific comment of a specific photo
      operationId: getComment
      responses:
        '200':
          description: Comment returned succesfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: The server encountered an internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'

    put: 
      tags:
        - Comment
      summary: Modify a comment
      description: Modify a specific comment
      security:
        - bearerAuth: []
      operationId: modifyComment

      responses:
        '200':
          description: Comment modified successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: The server encountered an internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'

    delete:
      tags:
        - Comment
      summary: Delete a comment
      description: Delete a specific comment
      security:
        - bearerAuth: []
      operationId: uncommentPhoto

      responses:
        '204': 
          description: Comment deleted successfully
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: The server encountered an internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'

  /photos/{photoId}/likes/:
    
    get:
      tags:
        - Like
      summary: List likes
      description: List all likes assigned to a photo
      operationId: listLikes
      parameters:
        - name: photoId
          in: path
          description: Identifier of photo to like
          required: true
          schema:
            $ref: '#/components/schemas/Identifier'
      responses:
        '200':
          description: List of likes returned successfully
          content:
            application/json: 
              schema:
                description: List of likes
                type: array
                minItems: 0
                maxItems: 100
                items:
                  $ref: "#/components/schemas/Like"
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: The server encountered an internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'

  /photos/{photoId}/likes/{userId}:

    parameters:
      - name: photoId
        in: path
        description: Identifier of photo to like
        required: true
        schema:
          $ref: '#/components/schemas/Identifier'
      - name: userId
        in: path
        description: Identifier of user who's leaving like
        required: true
        schema:
          $ref: '#/components/schemas/UserIdentifier'

    post:
      tags:
        - Like
      summary: Leave a like
      description: Leave a like to a specific photo
      security:
        - bearerAuth: []
      operationId: likePhoto

      responses:
        '201':
          description: Photo liked successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Like'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: The server encountered an internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'

    delete:
      tags:
        - Like
      summary: Remove a like
      description: Remove like to a specific photo 
      security:
        - bearerAuth: []
      operationId: unlikePhoto
      
      responses:
        '204':
          description: Like removed successfully
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: The server encountered an internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'

  /users/{userId}/following/:
  
    get:
      tags:
        - Following
      summary: List following
      description: Get list of users followed by a specific user
      parameters:
        - name: userId
          in: path
          description: Identifier of user who's following
          required: true
          schema:
            $ref: '#/components/schemas/UserIdentifier'
      security:
        - bearerAuth: []
      operationId: listFollowed
      
      responses: 
        '200':
          description: List of following returned succesfully
          content:
            application/json:
              schema:
                description: List of user
                type: array
                minItems: 0
                maxItems: 40
                items:
                  $ref: '#/components/schemas/UserIdentifier'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: The server encountered an internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'

  /users/{userId}/following/{userIdToFollow}:
  
    parameters:
      - name: userId
        in: path
        description: Identifier of user who's following
        required: true
        schema:
          $ref: '#/components/schemas/UserIdentifier'
      - name: userIdToFollow
        in: path
        description: Identifier of user to follow
        required: true
        schema:
          $ref: '#/components/schemas/UserIdentifier'
  
    put:
      tags:
        - Following
      summary: Follow an user
      description: Follow a specific user
      security:
        - bearerAuth: []
      operationId: followUser

      responses:
        '200':
          description: User followed successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        '400': 
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: The server encountered an internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'

    delete:
      tags:
        - Following
      summary: Unfollow an user
      description: Unfollow a specific user
      security:
        - bearerAuth: []
      operationId: unfollowUser
      
      responses:
        '204':
          description: User unfollowed successfully
        '400': 
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: The server encountered an internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
                
  /users/{userId}/banned/:
  
    get:
      tags:
        - Ban
      summary: Banned list
      description: Get list of users banned by a specific user
      parameters:
        - name: userId
          in: path
          description: Identifier of user who banned
          required: true
          schema:
            $ref: '#/components/schemas/UserIdentifier'
      security:
        - bearerAuth: []
      operationId: listBanned
      
      responses: 
        '200':
          description: List of banned returned succesfully
          content:
            application/json:
              schema:
                description: List of user
                type: array
                minItems: 0
                maxItems: 40
                items:
                  $ref: '#/components/schemas/UserIdentifier'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: The server encountered an internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
   
  /users/{userId}/banned/{userIdToBan}:
  
    parameters:
      - name: userId
        in: path
        description: Identifier of user who's following
        required: true
        schema:
          $ref: '#/components/schemas/UserIdentifier'
      - name: userIdToBan
        in: path
        description: Identifier of user to follow
        required: true
        schema:
          $ref: '#/components/schemas/UserIdentifier'
  
    put:
      tags:
        - Ban
      summary: Ban an user
      description: Ban a specific user
      security:
        - bearerAuth: []
      operationId: banUser
      
      responses:
        '200':
          description: User banned successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        '400': 
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: The server encountered an internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'

    delete:
      tags:
        - Ban
      summary: Unban an user
      description: Unban a specific user
      security:
        - bearerAuth: []
      operationId: unbanUser
      
      responses:
        '204':
          description: User unbanned successfully
        '400': 
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: The server encountered an internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'


components:

  securitySchemes:

    bearerAuth:
      type: http
      scheme: Bearer

  schemas:
  
    Identifier:
      readOnly: true
      description: Unique identifier used for several components
      type: integer
      example: 6365 

    UserIdentifier:
      description: Unique identifier for users 
      type: string
      pattern: "[a-z0-9]+"
      minLength: 3
      maxLength: 16
      example: abcdef012345

    Username:
      description: Name of an user
      type: string
      pattern: '^.*?$'
      minLength: 4
      maxLength: 24 
      example: FraDepe 

    User:   #Utente
      required:
        - id
        - follower
        - following
        - username
      type: object
      description: User of platform
      properties:
        id:
          $ref: '#/components/schemas/UserIdentifier'
        username:
          $ref: '#/components/schemas/Username'
        follower:
          type: array
          minItems: 0
          maxItems: 50
          description: List of people following this user
          items:
            $ref: '#/components/schemas/UserIdentifier'
        following:
          type: array
          minItems: 0
          maxItems: 50
          description: List of people this user is following
          items:
            $ref: '#/components/schemas/UserIdentifier'
        banned:
          type: array
          minItems: 0
          maxItems: 50
          description: List of user banned
          items:
            $ref: "#/components/schemas/UserIdentifier"
        photos:
          type: array
          minItems: 0
          maxItems: 40
          description: List of photos
          items:
            $ref: "#/components/schemas/Photo"
 
    Photo:   
      required:
        - photo_id
        - photo_url
        - likes
        - date_time
        - comments
      type: object
      description: Photo of platform
      properties:
        photo_id:
          $ref: '#/components/schemas/Identifier'
        photo_url:
          description: URL for photo
          type: string
          minLength: 1
          maxLength: 500
        likes:
          type: array
          minItems: 0
          maxItems: 50
          description: List of likes
          items:
            $ref: "#/components/schemas/Like"
        date_time:
          type: string
          minLength: 20
          maxLength: 20
          format: date-time
          description: Date and time of post 
          example: "2017-07-21T17:32:28Z"
        comments:
          type: array
          minItems: 0
          maxItems: 50
          description: List of comments
          items:
            $ref: "#/components/schemas/Comment"
 
    Comment:  #A comment
      required:
        - comment_id
        - text
        - userId
      type: object
      description: Comment to a photo
      properties:
        comment_id: 
          $ref: '#/components/schemas/Identifier'
        userId:
          $ref: '#/components/schemas/UserIdentifier'
        text:
          type: string
          minLength: 1
          maxLength: 5000
          pattern: '^.*?$'
          description: A simple text
          example: Sample text
      
    Like:
      required:
        - photoId
        - user_Id
      type: object
      description: Like to a photo
      properties:
        photoId:
          $ref: '#/components/schemas/Identifier'
        user_Id:
          $ref: '#/components/schemas/UserIdentifier'
      
    ApiResponse:
      type: object
      description: Text of responses
      properties:
        code:
          type: integer
          format: int32
          description: Response code
        type:
          type: string
          minLength: 1
          maxLength: 50
          description: Type of response
        message:
          type: string
          minLength: 1
          maxLength: 5000
          description: Text of response